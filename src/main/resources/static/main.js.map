{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/add-monster/add-monster.component.css","webpack:///./src/app/add-monster/add-monster.component.html","webpack:///./src/app/add-monster/add-monster.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.module.ts","webpack:///./src/app/model/monster.model.ts","webpack:///./src/app/monster-service/monster.service.ts","webpack:///./src/app/monster/monster.component.css","webpack:///./src/app/monster/monster.component.html","webpack:///./src/app/monster/monster.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".success {\\r\\n    color: rgb(130, 196, 33);\\r\\n}\\r\\n\\r\\n.err {\\r\\n    color: red;\\r\\n}\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-auto\\\">\\n    <h2 class=\\\"text-center\\\">Add Monster</h2>\\n    <h3 class=\\\"err\\\">{{errorMessage}}</h3>\\n  <form class=\\\"col-md-4 col-md-offset-4\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"name\\\">Name:</label>\\n      <input [(ngModel)]=\\\"monster.name\\\" name=\\\"name\\\" class=\\\"form-control\\\" id=\\\"name\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"challenge_rating\\\">Challenge Rating:</label>\\n    <input [(ngModel)]=\\\"monster.challenge_rating\\\" name=\\\"challenge_rating\\\" class=\\\"form-control\\\" id=\\\"challenge_rating\\\">\\n    </div>\\n    <button class=\\\"btn btn-success\\\" (click)=\\\"createMonster()\\\">Create</button>\\n    <h3 class=\\\"success\\\">{{succesMessage}}</h3>\\n  </form>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { Monster } from '../model/monster.model';\nimport { MonsterService} from '../monster-service/monster.service';\n\n@Component({\n  selector: 'app-add-monster',\n  templateUrl: './add-monster.component.html',\n  styleUrls: ['./add-monster.component.css']\n})\nexport class AddMonsterComponent implements OnInit {\n\n  monster: Monster = new Monster();\n  succesMessage: string;\n  errorMessage: string;\n\n  constructor(private router: Router, private monsterService: MonsterService) { }\n\n  ngOnInit() {\n    this.clearMessages();\n  }\n\n  createMonster(): void {\n    this.clearMessages();\n    this.monsterService.createMonster(this.monster)\n      .subscribe( data => {\n        this.succesMessage = \"Monster created\";\n      },\n      err => {\n        if (err.status == 400) {\n          this.errorMessage = \"Error while creatuing monster\"\n        }\n      }\n    );\n  };\n\n  clearMessages(): void {\n    this.succesMessage = \"\";\n    this.errorMessage = \"\";\n  } \n\n}\n","module.exports = \".btn-space {\\r\\n    margin-right: 5px;\\r\\n}\"","module.exports = \"<div style=\\\"text-align:center\\\">\\n  <h1>\\n    DnD Generator!\\n  </h1>\\n  <div style=\\\"text-align:left\\\">\\n  <a routerLink=\\\"/monsters\\\" class=\\\"btn btn-primary btn-lg btn-space\\\" role=\\\"button\\\">Monsters</a>\\n  <a routerLink=\\\"/addMonster\\\" class=\\\"btn btn-primary btn-lg btn-space\\\" role=\\\"button\\\">Add monster</a>\\n</div>\\n  <router-outlet></router-outlet>\\n</div>\\n\\n\"","import { Component } from '@angular/core';\nimport { setTheme } from 'ngx-bootstrap/utils';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  constructor() {\n    setTheme('bs3'); \n  }\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { MonsterComponent } from './monster/monster.component';\nimport { AppRoutingModule } from './app.routing.module';\nimport { MonsterService } from './monster-service/monster.service';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { AddMonsterComponent } from './add-monster/add-monster.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MonsterComponent,\n    AddMonsterComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [MonsterService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { MonsterComponent } from './monster/monster.component';\r\nimport { AddMonsterComponent } from './add-monster/add-monster.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'monsters', component: MonsterComponent },\r\n  { path: 'addMonster', component: AddMonsterComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(routes)\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ],\r\n  declarations: []\r\n})\r\nexport class AppRoutingModule { }","export class Monster {\r\n    id: Number;\r\n    name: String;\r\n    challenge_rating: String;\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n\nimport { Monster } from '../model/monster.model';\n\n@Injectable()\nexport class MonsterService {\n\n  constructor(private http: HttpClient) { }\n\n  private monsterUrl = '/api/monster';\n\n  public getMonstersCount(){\n    let pomogite: number = 0;\n    this.http.get<number>(this.monsterUrl + \"/count\").subscribe(data => {\n      pomogite = data\n      console.log(\"pomogite \" + pomogite)\n    })\n    return pomogite;\n  };\n\n  public getMonsters(pageSize: number, page: number){\n    console.log(page)\n    let params = new HttpParams();\n    params = params.set(\"pageSize\", pageSize.toString());\n    params = params.set(\"page\", page.toString());\n    return this.http.get<Monster[]>(this.monsterUrl, {params}); \n  };\n\n  public getMonster(monster){\n    return this.http.get<Monster>(this.monsterUrl + \"/\" + monster.id);\n  };\n\n  public deleteMonster(monster) {\n    return this.http.delete(this.monsterUrl + \"/\" + monster.id);\n  };\n\n  public createMonster(monster) {\n    return this.http.post<Monster>(this.monsterUrl, monster);\n  };\n}\n","module.exports = \".err {\\r\\n    color: red;\\r\\n}\"","module.exports = \"<div class=\\\"row\\\"></div>\\n<div class=\\\"col-md-1\\\"></div>\\n<div class=\\\"col-md-auto\\\">\\n  <h2> Monster Details</h2>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"id\\\">Find monster by Id:</label>\\n    <h3 class=\\\"err\\\">{{errorText}}</h3>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-4\\\"></div>\\n      <div class=\\\"col-md-4\\\"><input [(ngModel)]=\\\"foundMonster.id\\\" name=\\\"id\\\" class=\\\"form-control\\\" id=\\\"id\\\"></div>\\n      <div class=\\\"col-md-4\\\"></div>\\n    </div>\\n    <button class=\\\"btn btn-primary\\\" (click)=\\\"findMonster()\\\"> Find</button>\\n    <table class=\\\"table table-striped\\\">\\n      <thead>\\n        <tr>\\n          <th class=\\\"hidden\\\">Id</th>\\n          <th>Id</th>\\n          <th>Name</th>\\n          <th>Challenge rating</th>\\n          <th>Action</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr>\\n          <td class=\\\"hidden\\\"></td>\\n          <td>{{foundMonster.id}}</td>\\n          <td>{{foundMonster.name}}</td>\\n          <td>{{foundMonster.challenge_rating}}</td>\\n          <td>\\n            <button class=\\\"btn btn-danger\\\" (click)=\\\"deleteMonster(foundMonster)\\\"> Delete Monster</button>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n  <table class=\\\"table table-striped\\\">\\n    <thead>\\n      <tr class=\\\"text-center\\\">\\n        <th class=\\\"hidden\\\">Id</th>\\n        <th>Id</th>\\n        <th>Name</th>\\n        <th>Challenge rating</th>\\n        <th>Action</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let monster of monsters\\\">\\n        <td class=\\\"hidden\\\"></td>\\n        <td>{{monster.id}}</td>\\n        <td>{{monster.name}}</td>\\n        <td>{{monster.challenge_rating}}</td>\\n        <td>\\n          <button class=\\\"btn btn-danger\\\" (click)=\\\"deleteMonster(monster)\\\"> Delete Monster</button>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n  <nav>\\n    <ul class=\\\"pagination\\\">\\n      <li class=\\\"page-item\\\">\\n        <a class=\\\"page-link\\\" (click)=\\\"findMonsters(currentPage - 1)\\\" aria-label=\\\"Previous\\\">\\n          <span aria-hidden=\\\"true\\\">&laquo;</span>\\n          <span class=\\\"sr-only\\\">Previous</span>\\n        </a>\\n      </li>\\n      <li *ngFor=\\\"let page of pages\\\" class=\\\"page-item\\\">\\n        <a class=\\\"page-link\\\" (click)=\\\"findMonsters(page)\\\">{{page}}</a>\\n      </li>\\n      <li class=\\\"page-item\\\">\\n        <a class=\\\"page-link\\\" (click)=\\\"findMonsters(currentPage + 1)\\\" aria-label=\\\"Next\\\">\\n          <span aria-hidden=\\\"true\\\">&raquo;</span>\\n          <span class=\\\"sr-only\\\">Next</span>\\n        </a>\\n      </li>\\n    </ul>\\n  </nav>\\n</div>\\n<div class=\\\"col-md-1\\\"></div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { Monster } from '../model/monster.model';\nimport { MonsterService } from '../monster-service/monster.service';\n\n@Component({\n  selector: 'app-monster',\n  templateUrl: './monster.component.html',\n  styleUrls: ['./monster.component.css']\n})\nexport class MonsterComponent implements OnInit {\n\n  monsterCount: number = 324;\n  currentPage: number = 0;\n  pages: number[] = [];\n  pageSize: number = 15;\n  foundMonster: Monster = new Monster();\n  monsters: Monster[];\n  errorText: string;\n\n  constructor(private router: Router, private monsterService: MonsterService) { }\n\n  ngOnInit() {\n    this.currentPage = 0;\n    for (let i: number = 0; i < this.monsterCount / this.pageSize; i++) {\n      this.pages.push(i + 1);\n    }\n    this.errorText = \"\";\n    this.monsterService.getMonsters(this.pageSize, this.currentPage).subscribe(\n      data => {\n        this.monsters = data;\n      }\n    );\n  }\n\n  findMonsters(page: number): void {\n    this.currentPage = page;\n    this.monsterCount = this.monsterService.getMonstersCount()\n    this.monsterService.getMonsters(this.pageSize, page - 1).subscribe(\n      data => {\n        this.monsters = data\n      });\n  }\n\n  findMonster(): void {\n    this.errorText = \"\";\n    this.monsterService.getMonster(this.foundMonster).subscribe(\n      data => {\n        this.foundMonster = data\n      },\n      err => {\n        if (err.status == 404) {\n          this.errorText = \"Monster with id \" + this.foundMonster.id + \" doesn't exist \" + err.status;\n        }\n      }\n    );\n  }\n\n\n  deleteMonster(monster: Monster): void {\n    this.errorText = \"\";\n    this.monsterService.deleteMonster(monster)\n      .subscribe(data => {\n        if (monster.id == this.foundMonster.id) {\n          this.foundMonster = new Monster();\n        }\n        this.monsters = this.monsters.filter(m => m !== monster);\n      },\n      err => {\n        if (err.status == 404) {\n          this.errorText = \"Monster with id \" + this.foundMonster.id + \" doesn't exist \" + err.status;\n        }\n      });\n\n  };\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}