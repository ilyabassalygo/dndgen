{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/add-monster/add-monster.component.css","webpack:///./src/app/add-monster/add-monster.component.html","webpack:///./src/app/add-monster/add-monster.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.module.ts","webpack:///./src/app/model/monster.model.ts","webpack:///./src/app/monster-service/monster.service.ts","webpack:///./src/app/monster/monster.component.css","webpack:///./src/app/monster/monster.component.html","webpack:///./src/app/monster/monster.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"col-md-6\\\">\\n  <h2 class=\\\"text-center\\\">Add Monster</h2>\\n<form>\\n\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"id\\\">Id:</label>\\n   <input [(ngModel)]=\\\"monster.id\\\" name=\\\"id\\\" class=\\\"form-control\\\" id=\\\"id\\\">\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"name\\\">Name:</label>\\n    <input [(ngModel)]=\\\"monster.name\\\" name=\\\"name\\\" class=\\\"form-control\\\" id=\\\"name\\\">\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"challenge_rating\\\">Challenge Rating:</label>\\n   <input [(ngModel)]=\\\"monster.challenge_rating\\\" name=\\\"challenge_rating\\\" class=\\\"form-control\\\" id=\\\"challenge_rating\\\">\\n  </div>\\n\\n  <button class=\\\"btn btn-success\\\" (click)=\\\"createMonster()\\\">Create</button>\\n</form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { Monster } from '../model/monster.model';\nimport { MonsterService} from '../monster-service/monster.service';\n\n@Component({\n  selector: 'app-add-monster',\n  templateUrl: './add-monster.component.html',\n  styleUrls: ['./add-monster.component.css']\n})\nexport class AddMonsterComponent implements OnInit {\n\n  monster: Monster = new Monster();\n\n  constructor(private router: Router, private monsterService: MonsterService) { }\n\n  ngOnInit() {\n  }\n\n  createMonster(): void {\n    this.monsterService.createMonster(this.monster)\n      .subscribe( data => {\n        alert(\"monster created\");\n      });\n  };\n\n}\n","module.exports = \"\"","module.exports = \"<div style=\\\"text-align:center\\\">\\n  <h1>\\n    DnD Generator!\\n  </h1>\\n  <a routerLink=\\\"/monsters\\\">Monsters</a>\\n  <a routerLink=\\\"/addMonster\\\">Add monster</a>\\n  <router-outlet></router-outlet>\\n</div>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { MonsterComponent } from './monster/monster.component';\nimport { AppRoutingModule } from './app.routing.module';\nimport {MonsterService} from './monster-service/monster.service';\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {AddMonsterComponent} from './add-monster/add-monster.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MonsterComponent,\n    AddMonsterComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [MonsterService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { MonsterComponent } from './monster/monster.component';\r\nimport { AddMonsterComponent } from './add-monster/add-monster.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'monsters', component: MonsterComponent },\r\n  { path: 'addMonster', component: AddMonsterComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(routes)\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ],\r\n  declarations: []\r\n})\r\nexport class AppRoutingModule { }","export class Monster {\r\n    id: Number;\r\n    name: String;\r\n    challenge_rating: String;\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Monster } from '../model/monster.model';\n\n@Injectable()\nexport class MonsterService {\n\n  constructor(private http: HttpClient) { }\n\n  private monsterUrl = '/api/monster';\n\n  public getMonsters(){\n    return this.http.get<Monster[]>(this.monsterUrl); \n  };\n\n  public getMonster(monster){\n    return this.http.get<Monster>(this.monsterUrl + \"/\" + monster.id);\n  };\n\n  public deleteMonster(monster) {\n    return this.http.delete(this.monsterUrl + \"/\" + monster.id);\n  };\n\n  public createMonster(monster) {\n    return this.http.post<Monster>(this.monsterUrl, monster);\n  };\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"col-md-6\\\">\\n  <h2> Monster Details</h2>\\n  <h3>Find monster:</h3>\\n  <input [(ngModel)]=\\\"foundMonster.id\\\" name=\\\"id\\\" class=\\\"form-control\\\">\\n  <button class=\\\"btn btn-danger\\\" (click)=\\\"findMonster()\\\"> Find </button>\\n  <button class=\\\"btn btn-danger\\\" (click)=\\\"findMonsters()\\\"> Find ALl</button>\\n  <table>\\n      <th>Found monster:</th>\\n      <th>Id</th>\\n      <th>Name</th>\\n      <th>Challenge rating</th>\\n      <th>Action</th>\\n      <tr>\\n          <td>{{foundMonster.id}}</td>\\n          <td>{{foundMonster.name}}</td>\\n          <td>{{foundMonster.challenge_rating}}</td>\\n          <td><button class=\\\"btn btn-danger\\\" (click)=\\\"deleteMonster(foundMonster)\\\"> Delete Monster</button></td>\\n      </tr>\\n  </table>\\n  <table class=\\\"table table-striped\\\">\\n    <thead>\\n    <tr>\\n      <th class=\\\"hidden\\\">Id</th>\\n      <th>Id</th>\\n      <th>Name</th>\\n      <th>Challenge rating</th>\\n      <th>Action</th>\\n    </tr>\\n    </thead>\\n    <tbody>\\n    <tr *ngFor=\\\"let monster of monsters\\\">\\n      <td class=\\\"hidden\\\"></td>\\n      <td>{{monster.id}}</td>\\n      <td>{{monster.name}}</td>\\n      <td>{{monster.challenge_rating}}</td>\\n      <td><button class=\\\"btn btn-danger\\\" (click)=\\\"deleteMonster(monster)\\\"> Delete Monster</button></td>\\n    </tr>\\n    </tbody>\\n  </table>\\n  </div>\\n  \"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { Monster } from '../model/monster.model';\nimport { MonsterService} from '../monster-service/monster.service';\n\n@Component({\n  selector: 'app-monster',\n  templateUrl: './monster.component.html',\n  styleUrls: ['./monster.component.css']\n})\nexport class MonsterComponent implements OnInit {\n\n  foundMonster: Monster = new Monster();\n  monsters: Monster[];\n\n  constructor(private router: Router, private monsterService: MonsterService) { }\n\n  ngOnInit() {\n    this.monsterService.getMonsters().subscribe(data => {this.monsters = data});\n  }\n\n  findMonsters():void {\n   this.monsterService.getMonsters().subscribe(data => {this.monsters = data});\n  }\n\n  findMonster():void {\n    this.monsterService.getMonster(this.foundMonster).subscribe(data => {this.foundMonster = data});\n  }\n  \n  deleteMonster(monster: Monster): void {\n    this.monsterService.deleteMonster(monster)\n    .subscribe( data => {\n      this.monsters = this.monsters.filter( m => m !== monster);\n    });\n  };\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}